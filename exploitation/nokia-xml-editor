#script designed to add root access login via SSH to Nokia-Alcatel routers
#ONTUSER is the account with uid=0 that has a login shell and can be altered this way
#no, you can't make the password something other than `admin`
#yes, that's stupid
#so is using uclibc-0.9.33.2 twelve years post-deprecation
#that's why these devices are stuck with gcc 4.6.3 and kernel 3.18.21 or lower
#which means they're riddled with vulnerabilities
#enjoy
#!/bin/bash
if [ ! -e $1 ]; then
    echo "Filename to alter: "
    read FILE
else
    FILE=$1
fi
#first change the values that always need to be changed in every version
echo "Setting 'LimitAccount_ONTUSER' to FALSE"
sed -i 's/LimitAccount_ONTUSER rw="RW" t="boolean" v="true"/LimitAccount_ONTUSER rw="RW" t="boolean" v="false"/' $FILE
echo "Setting 'CLIPrompt' to /bin/sh"
sed -i 's/CLIPrompt ml="256" rw="RW" t="string" v=""/CLIPrompt ml="256" rw="RW" t="string" v="\/bin\/sh"/' $FILE
echo "Setting 'SshDisabled' to FALSE in every instance"
sed -i 's/SshDisabled dv="[Tt]rue" rw="RW" t="boolean" v="[Tt]rue"/SshDisabled dv="false" rw="RW" t="boolean" v="false"/' $FILE
sed -i 's/SshDisabled dv="[Tt]rue" rw="RW" t="boolean" v="[Ff]alse"/SshDisabled dv="false" rw="RW" t="boolean" v="false"/' $FILE
echo "Setting 'SshMgtPort' to 22 in every instance"
sed -i 's/X_ASB_COM_SshMgtPort dv="2222" rw="RW" t="unsignedInt" v="2222"/X_ASB_COM_SshMgtPort dv="22" rw="RW" t="unsignedInt" v="22"/' $FILE
echo "Setting 'ManagementIdleDisconnectTime' to 3600"
sed -i 's/ManagementIdleDisconnectTime dv="0" max="3600" min="0" rw="RW" t="unsignedInt" v="300"/ManagementIdleDisconnectTime dv="0" max="3600" min="0" rw="RW" t="unsignedInt" v="3600"/' $FILE
#dumb multi line ones comin up
echo "Setting 'DebugDyPass' to TRUE"
sed -i '\:DebugDyPass. n="DyPass" t="staticObject">:{
     n
     s/Enable rw="RW" t="boolean" v="false"/Enable rw="RW" t="boolean" v="true"/
       }' $FILE
echo "Enabling TelnetSshAccount"
sed -i '\:TelnetSshAccount. n="TelnetSshAccount" t="staticObject">:{
     n
     s/Enable rw="RW" t="boolean" v="False"/Enable rw="RW" t="boolean" v="True"/
      }' $FILE
echo "Enabling RemoteWebAccount"
sed -i '\:X_ASB-COM_RemoteWebAccount. n="RemoteAccount" t="staticObject">:{
     n
     s/Enable rw="RW" t="boolean" v="False"/Enable rw="RW" t="boolean" v="True"/
      }' $FILE
TELNETLINE="$(grep -n 'TelnetSshAccount' $FILE | cut -d : -f 1 | head -n 1)"
echo "Line number for TelnetSshAccount: $TELNETLINE"
REMOTELINE="$(grep -n 'RemoteWebAccount' $FILE | cut -d : -f 1 | head -n 1)"
echo "Line number for RemoteWebAccount: $REMOTELINE"
TEL2=$(($TELNETLINE + 2))
TEL3=$(($TELNETLINE + 3))
REM2=$(($REMOTELINE + 4))
REM3=$(($REMOTELINE + 5))
REM4=$(($REMOTELINE + 6))
echo "Rewriting username lines $TEL2 and $REM2 with value ONTUSER"
sed -i "${TEL2}s/.*/<UserName ml=\"64\" rw=\"RW\" t=\"string\" v=\"ONTUSER\"><\/UserName>/" $FILE
sed -i "${REM2}s/.*/<UserName ml=\"64\" rw=\"RW\" t=\"string\" v=\"ONTUSER\"><\/UserName>/" $FILE
if grep -q -wi "ealgo" $FILE; then
     echo "Encrypted password strings detected! Using encryption for password 'admin'"
     sed -i "${TEL3}s/.*/<Password ml=\"64\" rw=\"RW\" t=\"string\" v=\"OYdLWUVDdKQTPaCIeTqniA==\" ealgo=\"ab\"><\/Password>/" $FILE
     sed -i "${REM3}s/.*/<Password ml=\"64\" rw=\"RW\" t=\"string\" v=\"OYdLWUVDdKQTPaCIeTqniA==\" ealgo=\"ab\"><\/Password>/" $FILE
     sed -i "${REM4}s/.*/<PresetPassword ml=\"64\" rw=\"RW\" t=\"string\" v=\"OYdLWUVDdKQTPaCIeTqniA==\" ealgo=\"ab\"><\/PresetPassword>/" $FILE 
else
     echo "No password encryption detected! Writing password 'admin' in plain text"
     sed -i "${TEL3}s/.*/<Password ml=\"64\" rw=\"RW\" t=\"string\" v=\"admin\"><\/Password>/" $FILE
     sed -i "${REM3}s/.*/<Password ml=\"64\" rw=\"RW\" t=\"string\" v=\"admin\"><\/Password>/" $FILE
     sed -i "${REM4}s/.*/<PresetPassword ml=\"64\" rw=\"R\" t=\"string\" v=\"admin\"><\/PresetPassword>/" $FILE
fi
if grep -q -wi "X_ASB-COM_RemoteSshPort" $FILE; then
     echo "XML tag RemoteSshPort found! Setting to 22"
     sed -i 's/X_ASB-COM_RemoteSshPort dv="0" max="65535" min="0" rw="RW" t="unsignedInt" v="0/X_ASB-COM_RemoteSshPort dv="22" max="65535" min="0" rw="RW" t="unsignedInt" v="22/' $FILE
else
     echo "No RemoteSshPort XML tag found. Adding in each instance and setting to 22"
     sed -i 's/<\/X_ALU-COM_WanAccessCfg.>/<X_ASB-COM_RemoteSshPort dv="22" max="65535" min="0" rw="RW" t="unsignedInt" v="22"><\/X_ASB-COM_RemoteSshPort>\
<\/X_ALU-COM_WanAccessCfg.>/' $FILE
fi
echo "Converting to DOS format (this helps to avoid file rejection)"
unix2dos -f $FILE
echo "Edits are complete!"
echo "You can repack and upload your file now"
echo "Be sure to give it one of the whitelisted config file names like 'dropbear'"
#the other whitelisted config names, should you want to use a different one:
#lost+found config_exist_flag admin ct custom.cfg confignew.cfg confignew.cfg.bak config.xml bosa etc dropbear mtk7592 omci tr069_conf br0_ip_addr alcatel loidRecord.txt restore_default_flag igmpv3dbgfifo factory_telnet_enable igmprt.conf olt.txt

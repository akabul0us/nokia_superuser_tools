#!/usr/bin/env bash
send_file() {
    cat $file_1 | ssh ONTUSER@$remote_ip -p $port "cat > $file_2"
}
get_file() {
    ssh ONTUSER@$remote_ip -p $port "cat $file_1" > $file_2
}
print_help() {
echo "Send files with ./file_transfer.sh -s file ip_address [port] [remote filename]"
echo "Get files with ./file_transfer.sh -g remote_filename ip_address [port] [local filename]"
echo "ex. to send mipsle.tgz to 192.168.1.254 on port 8022 and save it there as /var/mipsle.tgz, do:"
echo "./file_transfer.sh -s mipsle.tgz 192.168.1.254 8022 /var/mipsle.tgz"
echo "to get /configs/config_encryption.cfg from the same host but on port 22, do:"
echo "./file_transfer.sh -g /configs/config_encryption.cfg 192.168.1.254"
echo "If no remote filename is passed, -s will send to the home directory /etc/home/ONTUSER"
echo "If no port is passed, the default is 22"
exit 1
}
while getopts "sg:" flag; do
 shift
 if [[ -z "$1" ]]; then
     print_help
 else
    file_1="$1"
 fi
 if [[ -z "$2" ]]; then
    print_help
 else
   remote_ip="$2"
 fi
 if [[ -z "$3" ]]; then
     port=22
 else
     port="$3"
 fi
 if [[ -z "$4" ]]; then
     file_2="$(basename $file_1)"
 else
     file_2="$4"
 fi
 case $flag in
   s)
   send_file
   ;;
   g)
   get_file
   ;;
   h)
   print_help
   ;; 
   \?)
   echo "Please use flag -s to send a file or -g to get one"
   ;;
 esac
done
